<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllPosts" xml:space="preserve">
    <value>All posts</value>
  </data>
  <data name="Blog" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="Brevis" xml:space="preserve">
    <value>Tales of Brevis: A Beast Called God</value>
  </data>
  <data name="BrevisDescription" xml:space="preserve">
    <value>Local 2-player asymmetric multiplayer game where one player collects carrots while the other tries to stop them.</value>
  </data>
  <data name="BuyMeABeer" xml:space="preserve">
    <value>Buy me a beer</value>
  </data>
  <data name="CouldntFindPost" xml:space="preserve">
    <value>Sorry, I couldn't find that post :(</value>
  </data>
  <data name="EnglishNative" xml:space="preserve">
    <value>English (Native)</value>
  </data>
  <data name="HogWild" xml:space="preserve">
    <value>Hog Wild</value>
  </data>
  <data name="HogWildDescription" xml:space="preserve">
    <value>Herd the pigs into their pens, but make sure they don't fall into the black holes.</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="HostedOnAzure" xml:space="preserve">
    <value>Hosted on Azure</value>
  </data>
  <data name="Intro1" xml:space="preserve">
    <value>Welcome to my portfolio!</value>
  </data>
  <data name="Intro2" xml:space="preserve">
    <value>This is where I show the games I've made, skills I've learned, and blog posts I've written.</value>
  </data>
  <data name="Intro3" xml:space="preserve">
    <value>I made this website using Blazor as a challenge to myself to learn web development.</value>
  </data>
  <data name="Japanese" xml:space="preserve">
    <value>Japanese (JLPT N3)</value>
  </data>
  <data name="JobTitles" xml:space="preserve">
    <value>Game Developer, Programmer, Technical Writer</value>
  </data>
  <data name="Lark" xml:space="preserve">
    <value>Lark</value>
  </data>
  <data name="LarkDescription" xml:space="preserve">
    <value>Drag your finger or mouse up and down the screen to catch notes in time to the music in this rhythm game about anxiety.</value>
  </data>
  <data name="LessThanOneYear" xml:space="preserve">
    <value>&lt; 1 year</value>
  </data>
  <data name="LinkedIn" xml:space="preserve">
    <value>LinkedIn</value>
  </data>
  <data name="MadeWith" xml:space="preserve">
    <value>Made with Blazor</value>
  </data>
  <data name="MyName" xml:space="preserve">
    <value>Eliot Cowley</value>
  </data>
  <data name="NoBlogPosts" xml:space="preserve">
    <value>Sorry, no blog posts yet :(</value>
  </data>
  <data name="NoResultsFound" xml:space="preserve">
    <value>No results found :(</value>
  </data>
  <data name="OneToThreeYears" xml:space="preserve">
    <value>1 - 3 years</value>
  </data>
  <data name="OverThreeYears" xml:space="preserve">
    <value>&gt; 3 years</value>
  </data>
  <data name="PlayOnItch" xml:space="preserve">
    <value>Play on itch.io</value>
  </data>
  <data name="PlayWindowsXbox" xml:space="preserve">
    <value>Play on Windows / Xbox</value>
  </data>
  <data name="Portfolio" xml:space="preserve">
    <value>Portfolio</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Projects1" xml:space="preserve">
    <value>The following video shows a few of the games that I've worked on.</value>
  </data>
  <data name="Projects2" xml:space="preserve">
    <value>Below are some of the projects I've worked on, with links to play them and view source code.</value>
  </data>
  <data name="Quest" xml:space="preserve">
    <value>Quest</value>
  </data>
  <data name="QuestDescription" xml:space="preserve">
    <value>Control two characters with unique abilities and move between paths to collect coins and defeat enemies in this rhythm-based auto-runner.</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResults1" xml:space="preserve">
    <value>Search results for </value>
  </data>
  <data name="SearchResults2" xml:space="preserve">
    <value />
  </data>
  <data name="Skills1" xml:space="preserve">
    <value>Here are the skills I've learned, organized by how many years of experience I have with them.</value>
  </data>
  <data name="Skills2" xml:space="preserve">
    <value>For my full resume, including educational and work history, see my</value>
  </data>
  <data name="Skills3" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="SkillsHeader" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="TechnicalWriting" xml:space="preserve">
    <value>Technical Writing</value>
  </data>
  <data name="UggDescription" xml:space="preserve">
    <value>Gather gerbils to fight enemies and solve puzzles in this 3D physics action game.</value>
  </data>
  <data name="ViewCodeOnGitHub" xml:space="preserve">
    <value>View code on GitHub</value>
  </data>
</root>