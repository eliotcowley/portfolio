@inherits LayoutComponentBase
@using System.Globalization
@inject ILocalStorageService localStorage
@inject IStringLocalizer<ResourceFiles.Resource> loc

<div class="container-fluid p-0 h-100 main-container">

    <nav class="navbar navbar-expand-lg navbar-dark fixed-top bg-dark-blue">
        <div class="container">
            <a class="navbar-brand" href="">@loc["MyName"]</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation" @onclick="(() => this.navbarCollapsed = !this.navbarCollapsed)">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link @GetActive("", NavLinkMatch.All)" href="" data-bs-toggle="@(this.navbarCollapsed ? "" : "collapse")" data-bs-target="#navbarSupportedContent" @onclick="@(e => Collapse(""))" role="button">@loc["Home"]</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @GetActive("blog", NavLinkMatch.All)" href="/blog" data-bs-toggle="@(this.navbarCollapsed ? "" : "collapse")" data-bs-target="#navbarSupportedContent" @onclick="@(e => Collapse("/blog"))" role="button">@loc["Blog"]</a>
                    </li>
                </ul>
                <a class="btn btn-primary me-4 mb-2 mb-lg-0" href="https://www.linkedin.com/in/eliotcowley/" target="_blank" rel="noopener noreferrer">
                    <i class="bi bi-linkedin"></i>
                </a>
                <form class="me-0 me-lg-4 mb-2 mb-lg-0">
                    <select class="form-select bg-dark text-white arrow-white" aria-label="Select language" @onchange="OnLanguageChange">
                        <option selected class="text-white">Language / 言語</option>
                        <option value="en-US">English</option>
                        <option value="ja-JP">日本語</option>
                    </select>
                </form>
                <form class="dropdown d-flex" action="/search" @onsubmit="OnSearchSubmit" autocomplete="off">
                    <input class="form-control dropdown-toggle" type="search" placeholder="@loc["Search"]" aria-label="Search" data-bs-toggle="dropdown" aria-expanded="false" @oninput="OnSearchInput" name="input" @bind-value="this.searchString" />
                    <ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="Search" style="opacity: @this.searchDropdownOpacity">
                        @foreach (var item in this.searchSuggestions)
                        {
                            <li><a class="dropdown-item" href="@DataManager.BlogPosts.Find(post => post.Title == item).Url">@item</a></li>
                        }
                    </ul>
                    <button class="btn btn-light ms-2" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </form>
            </div>
        </div>
    </nav>

    <div class="container-fluid bg-dark py-5">
        <div class="container mt-5">
            @Body
        </div>
    </div>

    <button id="btn-back-to-top" class="btn btn-outline-light fixed-bottom ms-auto me-5 mb-5" style="display: none" @onclick="OnBackToTopButtonClicked"><i class="bi bi-arrow-up"></i></button>

    <footer class="container-fluid py-5 row justify-content-center">
        <div class="col-12 col-md-auto align-self-center text-center me-0 me-md-5 order-last order-md-first">
            <a class="btn btn-primary" href="https://paypal.me/eliotcowley" target="_blank" rel="noopener noreferrer">&#x1F37A; @loc["BuyMeABeer"]</a>
        </div>
        <div class="col-12 col-md-auto align-self-center text-center ms-0 ms-md-5 mb-3 mb-md-0">
            <p class="m-0 mb-1"><i class="bi bi-code-slash text-success"></i> @loc["MadeWith"]</p>
            <p class="m-0 mb-2">&#9729; @loc["HostedOnAzure"]</p>
            <a class="btn btn-light" href="https://github.com/eliotcowley/portfolio" target="_blank" rel="noopener noreferrer"><i class="bi bi-github"></i> @loc["ViewCodeOnGitHub"]</a>
        </div>
    </footer>
</div>

@code {
    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Inject]
    protected IJSRuntime _JsRuntime { get; set; }

    private List<string> searchSuggestions;
    private string searchString = string.Empty;
    private string currentCulture;
    private int searchDropdownOpacity = 0;
    private bool navbarCollapsed = true;

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += (s, e) =>
        {
            StateHasChanged();
        };

        this.searchSuggestions = new List<string>();
        this.currentCulture = CultureInfo.CurrentCulture.Name;
    }

    bool IsActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix)
    {
        var relativePath = NavigationManager.ToBaseRelativePath(NavigationManager.Uri).ToLower();
        return navLinkMatch == NavLinkMatch.All ? relativePath == href.ToLower() : relativePath.StartsWith(href.ToLower());
    }

    string GetActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix) => IsActive(href, navLinkMatch) ? "active" : "";

    private void OnSearchInput(ChangeEventArgs changeEventArgs)
    {
        this.searchString = changeEventArgs.Value.ToString();

        if (this.searchString == string.Empty)
        {
            this.searchDropdownOpacity = 0;
            this.searchSuggestions.Clear();
        }
        else
        {
            this.searchSuggestions = DataManager.BlogPosts
                .Select(post => post.Title)
                .Where(title => title.ToLower().Contains(this.searchString.ToLower()))
                .Take(3)
                .ToList();

            this.searchDropdownOpacity = (this.searchSuggestions.Count > 0) ? 1 : 0;
        }
    }

    private async void OnSearchSubmit()
    {
        if (NavigationManager.Uri != $"{NavigationManager.BaseUri}/search/{this.searchString}")
        {
            this.navbarCollapsed = true;
            this.searchSuggestions.Clear();
            StateHasChanged();
            NavigationManager.NavigateTo($"/search/{this.searchString}");
            this.searchString = string.Empty;
            this.searchDropdownOpacity = 0;
            await _JsRuntime.InvokeVoidAsync("collapseNavbar");
        }
    }

    private void OnLanguageChange(ChangeEventArgs e)
    {
        localStorage.SetItemAsync<string>("language", e.Value.ToString());
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

    private void Collapse(string uri)
    {
        this.navbarCollapsed = true;
        NavigationManager.NavigateTo(uri);
    }

    private async void OnBackToTopButtonClicked()
    {
        await _JsRuntime.InvokeVoidAsync("OnScrollEvent");
    }

    private async Task<string> GetBackToTopButtonDisplay()
    {
        Console.WriteLine("GetBackToTopButtonDisplay()");
        string backToTopButtonDisplay = await _JsRuntime.InvokeAsync<string>("getBackToTopButtonDisplay", null);
        Console.WriteLine(backToTopButtonDisplay);
        return backToTopButtonDisplay;
    }
}