@page "/blog/{PostUrl}"
@inject HttpClient Http
@inject IStringLocalizer<ResourceFiles.Resource> loc

<Document Title="@($"Eliot Cowley | {this.title}")"></Document>

<a class="btn btn-light mb-4" href="/blog"><i class="bi bi-arrow-left"></i> @loc["AllPosts"]</a>

<div class="reading-width mx-auto">
    @if (this.html.Value != string.Empty)
    {
        @this.html
    }
</div>

@code {
    [Parameter]
    public string PostUrl { get; set; }

    private MarkupString html;
    private string title;

    protected override void OnInitialized()
    {
        CreatePage();
    }

    protected override void OnParametersSet()
    {
        Refresh();
    }

    private void CreatePage()
    {
        BlogPost post = DataManager.BlogPosts.Find(post => post.Url.Split('/')[1] == this.PostUrl);

        if (post != null)
        {
            this.title = post.Title;
            string htmlString = Markdown.ToHtml(post.Markdown);
            string processedHtml = ProcessHtml(htmlString);
            this.html = new MarkupString(processedHtml);
        }
        else
        {
            this.html = new MarkupString($"<p>{loc["CouldntFindPost"]}</p>");
        }
    }

    private void Refresh()
    {
        CreatePage();
        StateHasChanged();
    }

    private string ProcessHtml(string s)
    {
        string processedImages = s.Replace("img", "img class=\"mx-auto d-block py-4\"");
        return processedImages.Replace("h2", "h2 class=\"mt-5\"");
    }
}
